{"version":3,"sources":["components/appHeader/AppHeader.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js","components/spiner/Spinner.js","resources/img/UW.png","resources/img/x-men.png","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","hooks/http.hook.js","components/comicsList/ComicsList.js","components/pages/ComicPages.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","resources/img/abyss.jpg","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","resources/img/vision.png","components/pages/MainPages.js","components/pages/404.js","components/pages/SingleComicPage.js","components/test/Test.js","components/app/App.js","index.js"],"names":["AppHeader","className","to","exact","style","color","isActive","activeStyle","AppBanner","src","avengers","alt","avengersLogo","Spinner","xmlns","margin","background","display","width","height","viewBox","preserveAspectRatio","transform","cx","cy","r","fill","fillOpacity","attributeName","type","begin","values","keyTimes","dur","repeatCount","ErrorMessage","img","objectFit","useMarvelService","useState","loading","setLoading","error","setError","request","useCallback","url","a","method","body","headers","fetch","response","ok","Error","status","json","data","message","clearError","useHttp","_apiBase","_apiKey","getAllCharacters","offset","res","results","map","_transformCharacter","getCharacter","id","getAllComics","_transformComics","getComic","char","name","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","title","pageCount","language","textObjects","price","prices","ComicsList","props","comicsList","setComicsList","newComicsLoading","setNewComicsLoading","setOffset","comicsEnded","setComicsEnded","useEffect","onRequestComics","initial","then","onComicsListLoaded","newComicsList","ended","length","arr","item","i","renderComics","errorMessage","spinner","disabled","onClick","Comicpages","View","imgStyle","href","RandomChar","setChar","updateChar","timerId","setInterval","clearInterval","onCharLoaded","Math","floor","random","content","mjolnir","CharList","charList","setCharList","newItemLoading","setNewItemLoading","charEnded","setcharEnded","onRequest","onCharListLoaded","newCharList","itemRefs","useRef","focusOnItem","current","forEach","classList","remove","add","focus","tabIndex","ref","el","onCharSelected","onKeyPress","e","key","renderItems","Skeleton","CharInfo","charId","skeleton","ErrorBoundary","state","errorInfo","console","log","this","setState","children","Component","Mainpages","selectedChar","decoration","Pages404","comic","SingleComicPage","comicId","useParams","setComic","updateComic","onComicLoader","Test2","App","MainPages","ComicPages","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.320f4f8c.chunk.js","sourcesContent":["import './appHeader.scss';\nimport { Link, NavLink } from 'react-router-dom';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <Link to=\"/marvel-started\">\n                    <span>Marvel</span> information portal\n                </Link>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li><NavLink exact style={({ isActive}) => ({color : isActive ? '#9F0013' : 'inherit', 'border' : 'none'})} to=\"/marvel-started\">Characters</NavLink></li>\n                    /\n                    <li><NavLink activeStyle={{'color' : '#9f0013', 'background' : 'none', 'border' : 'none'}} to=\"/marvel-started/comics\">Comics</NavLink></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","const Spinner = () => {\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" style={{margin: '0 auto', background: 'none', display: 'block'}} width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\n            <g transform=\"translate(80,50)\">\n            <g transform=\"rotate(0)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"1\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.875s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(71.21320343559643,71.21320343559643)\">\n            <g transform=\"rotate(45)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.875\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.75s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(50,80)\">\n            <g transform=\"rotate(90)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.75\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.625s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(28.786796564403577,71.21320343559643)\">\n            <g transform=\"rotate(135)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.625\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.5s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(20,50.00000000000001)\">\n            <g transform=\"rotate(180)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.5\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.375s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(28.78679656440357,28.786796564403577)\">\n            <g transform=\"rotate(225)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.375\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.25s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(49.99999999999999,20)\">\n            <g transform=\"rotate(270)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.25\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.125s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(71.21320343559643,28.78679656440357)\">\n            <g transform=\"rotate(315)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.125\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"0s\"></animate>\n            </circle>\n            </g>\n            </g>\n        </svg>\n    )\n}\n\nexport default Spinner;","export default __webpack_public_path__ + \"static/media/UW.422636b4.png\";","export default __webpack_public_path__ + \"static/media/x-men.41b39e19.png\";","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif'\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <img src={img} style={{ display: 'block', width: \"250px\", height: \"250px\",objectFit: 'contain', margin: \"0 auto\"}} alt=\"error\" />\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","import {useHttp} from '../hooks/http.hook';\r\n\r\nconst useMarvelService = () => {\r\n    const {loading, request, error, clearError} = useHttp();\r\n\r\n    const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n    // ЗДЕСЬ БУДЕТ ВАШ КЛЮЧ, ЭТОТ КЛЮЧ МОЖЕТ НЕ РАБОТАТЬ\r\n    const _apiKey = 'apikey=c5d6fc8b83116d92ed468ce36bac6c62';\r\n    const _baseOffset = 210;\r\n\r\n    const getAllCharacters = async (offset = _baseOffset) => {\r\n        const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\r\n        return res.data.results.map(_transformCharacter);\r\n    }\r\n\r\n    const getCharacter = async (id) => {\r\n        const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n        return _transformCharacter(res.data.results[0]);\r\n    }\r\n\r\n    const getAllComics = async (offset = 0) => {\r\n        const res = await request(`${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`);\r\n        return res.data.results.map(_transformComics);\r\n    }\r\n\r\n    const getComic = async (id) => {\r\n        const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n        return _transformComics(res.data.results[0]);\r\n    }\r\n\r\n    const _transformCharacter = (char) => {\r\n        return {\r\n            id: char.id,\r\n            name: char.name,\r\n            description: char.description ? `${char.description.slice(0, 210)}...` : 'There is no description for this character',\r\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n            homepage: char.urls[0].url,\r\n            wiki: char.urls[1].url,\r\n            comics: char.comics.items\r\n        }\r\n    }\r\n\r\n    const _transformComics = (comics) => {\r\n        return {\r\n            id: comics.id,\r\n            title: comics.title,\r\n            description: comics.description || 'There is no description',\r\n            pageCount: comics.pageCount ? `${comics.pageCount} p.` : 'No information about the number of pages',\r\n            thumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\r\n            language: comics.textObjects.language || 'en-us',\r\n            price: comics.prices[0].price ? `${comics.prices[0].price}$` : 'not available'\r\n        }\r\n    }\r\n\r\n    return {loading, error, clearError, getAllCharacters, getCharacter, getAllComics, getComic}\r\n}\r\n\r\nexport default useMarvelService;","import { useState, useCallback} from 'react';\r\n\r\nexport const useHttp = () => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {'Content-Type' : 'application/json'}) => {\r\n\r\n        setLoading(true);\r\n\r\n        try {\r\n            const response = await fetch(url, {method, body, headers});\r\n\r\n            if (!response.ok) {\r\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n            }\r\n\r\n            const data = await response.json();\r\n\r\n            setLoading(false);\r\n            return data;\r\n\r\n        } catch(e) {\r\n\r\n            setLoading(false);\r\n            setError(e.message);\r\n            throw e;\r\n        }\r\n\r\n    }, []);\r\n\r\n    const clearError = useCallback(() => setError(null), []);\r\n\r\n    return { loading, request, error, clearError }\r\n}","import './comicsList.scss';\nimport uw from '../../resources/img/UW.png';\nimport xMen from '../../resources/img/x-men.png';\nimport { Link } from 'react-router-dom';\n\nimport { useState, useEffect, useRef } from 'react';\n\nimport Spinner from '../spiner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport useMarvelService from '../../services/MarvelService';\n\nconst ComicsList = (props) => {\n\n    const [comicsList, setComicsList] = useState([]);\n    const [newComicsLoading, setNewComicsLoading] = useState(false);\n    const [offset, setOffset] = useState(210);\n    const [comicsEnded, setComicsEnded] = useState(false);\n\n    const {loading, error, getAllComics} = useMarvelService();\n\n    useEffect(() => {\n        onRequestComics(offset, true);\n    }, []);\n\n    const onRequestComics = (offset, initial) => {\n        initial ? setNewComicsLoading(false) : setNewComicsLoading(true);\n        getAllComics(offset)\n            .then(onComicsListLoaded)\n    }\n\n    const onComicsListLoading = () => {\n        setNewComicsLoading(true);\n    }\n\n    const onComicsListLoaded = (newComicsList) => {\n        let ended = false;\n        if(newComicsList.length < 8) {\n            ended = true;\n        }\n\n        setComicsList(comicsList => [...comicsList, ...newComicsList]);\n        setNewComicsLoading(newComicsLoading => false);\n        setOffset(offset => offset + 8);\n        setComicsEnded(comicsEnded => ended);\n    }\n\n\n    function renderComics(arr) {\n        const items = arr.map((item, i) => {\n            return (\n                <li className=\"comics__item\" key={i}>\n                    <Link to={`/comics/${item.id}`}>\n                        <img src={item.thumbnail} alt={item.title} className=\"comics__item-img\"/>\n                        <div className=\"comics__item-name\">{item.title}</div>\n                        <div className=\"comics__item-price\">{item.price}</div>\n                    </Link>\n                </li>\n            )\n        })\n\n        return (\n            <ul className=\"comics__grid\">\n                {items}\n            </ul>\n        )\n    }\n\n    const items = renderComics(comicsList);\n\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading && !newComicsLoading ? <Spinner/> : null;\n\n    return (\n        <div className=\"comics__list\">\n            {errorMessage}\n            {spinner}\n            {items}\n            <button \n                disabled={newComicsLoading} \n                style={{'display' : comicsEnded ? 'none' : 'block'}}\n                className=\"button button__main button__long\"\n                onClick={() => onRequestComics(offset)}>\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\nexport default ComicsList;","import React from 'react';\r\nimport AppBanner from \"../appBanner/AppBanner\";\r\nimport ComicsList from \"../comicsList/ComicsList\";\r\n\r\nconst Comicpages = () => {\r\n    return (\r\n        <>\r\n            <AppBanner/>\r\n            <ComicsList/>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Comicpages;\r\n","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import {useState, useEffect} from 'react';\nimport Spinner from '../spiner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport useMarvelService from '../../services/MarvelService';\n\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\n\nconst RandomChar = () => {\n\n    const [char, setChar] = useState(null);\n    // const [loading, setLoading] = useState(true);\n    // const [error, setError] = useState(false);\n\n    const {loading, error, getCharacter, clearError} = useMarvelService();\n\n    useEffect(() => {\n        updateChar();\n        const timerId = setInterval(updateChar, 60000);\n\n        return () => {\n            clearInterval(timerId)\n        }\n    }, [])\n\n    const onCharLoaded = (char) => {\n        // setLoading(false);\n        setChar(char);\n    }\n\n    // const onCharLoading = () => {\n    //     setLoading(true);\n    // }\n\n    // const onError = () => {\n    //     setError(true);\n    //     setLoading(false);\n    // }\n\n    const updateChar = () => {\n        clearError();\n        const id = Math.floor(Math.random() * (1011400 - 1011000)) + 1011000;\n        // onCharLoading();\n        getCharacter(id)\n            .then(onCharLoaded)\n            // .catch(onError);\n    }\n\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading ? <Spinner/> : null;\n    const content = !(loading || error || !char) ? <View char={char} /> : null;\n\n    return (\n        <div className=\"randomchar\">\n            {errorMessage}\n            {spinner}\n            {content}\n            <div className=\"randomchar__static\">\n                <p className=\"randomchar__title\">\n                    Random character for today!<br/>\n                    Do you want to get to know him better?\n                </p>\n                <p className=\"randomchar__title\">\n                    Or choose another one\n                </p>\n                <button onClick={updateChar} className=\"button button__main\">\n                    <div className=\"inner\">try it</div>\n                </button>\n                <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n            </div>\n        </div>\n    )\n}\n\nconst View = ({char}) => {\n    const {name, description, thumbnail, homepage, wiki} = char;\n    let imgStyle = {'objectFit' : 'cover'};\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = {'objectFit' : 'contain'};\n    }\n\n    return (\n        <div className=\"randomchar__block\">\n            <img src={thumbnail} alt=\"Random character\" className=\"randomchar__img\" style={imgStyle}/>\n            <div className=\"randomchar__info\">\n                <p className=\"randomchar__name\">{name}</p>\n                <p className=\"randomchar__descr\">\n                    {description}\n                </p>\n                <div className=\"randomchar__btns\">\n                    <a href={homepage} className=\"button button__main\">\n                        <div className=\"inner\">homepage</div>\n                    </a>\n                    <a href={wiki} className=\"button button__secondary\">\n                        <div className=\"inner\">Wiki</div>\n                    </a>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default RandomChar;","import './charList.scss';\nimport abyss from '../../resources/img/abyss.jpg';\nimport { useState, useEffect, useRef } from 'react';\n\nimport Spinner from '../spiner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport useMarvelService from '../../services/MarvelService';\n\nconst CharList = (props) => {\n\n    const [charList, setCharList] = useState([]);\n    // const [loading, setLoading] = useState(true);\n    // const [error, setError] = useState(false);\n    const [newItemLoading , setNewItemLoading] = useState(false);\n    const [offset , setOffset] = useState(210);\n    const [charEnded , setcharEnded] = useState(false);\n\n    const {loading, error, getAllCharacters} = useMarvelService();\n\n    // const marvelService = useMarvelService();\n\n    // componentDidMount() {\n    //     this.onRequest();\n    // }\n\n    useEffect(() => {\n        onRequest(offset, true);\n    }, []);\n\n    const onRequest = (offset, initial) => {\n        initial ? setNewItemLoading(false) : setNewItemLoading(true);\n        getAllCharacters(offset)\n            .then(onCharListLoaded)\n            // .catch(onError)\n    }\n\n    const onCharListLoading = () => {\n        // this.setState({\n        //     newItemLoading : true\n        // })\n        setNewItemLoading(true);\n    }\n\n    const onCharListLoaded =  (newCharList) => {\n        let ended = false;\n        if(newCharList.length < 9) {\n            ended = true;\n        }\n\n        // this.setState(({offset, charList}) => ({\n        //     charList : [...charList, ...newCharList],\n        //     loading : false,\n        //     newItemLoading : false,\n        //     offset: offset + 9,\n        //     charEnded : ended\n        // }))\n\n        setCharList(charList => [...charList, ...newCharList]);\n        // setLoading(loading => false);\n        setNewItemLoading(newItemLoading => false);\n        setOffset(offset => offset + 9);\n        setcharEnded(charEnded => ended);\n    }\n\n    // const onError = () => {\n    //     // this.setState({\n    //     //     error : true,\n    //     //     loading: false\n    //     // })\n    //     setError(true);\n    //     setLoading(loading => false);\n    // }\n\n    const itemRefs = useRef([]);\n\n    const focusOnItem = (id) => {\n        // Я реализовал вариант чуть сложнее, и с классом и с фокусом\n        // Но в теории можно оставить только фокус, и его в стилях использовать вместо класса\n        // На самом деле, решение с css-классом можно сделать, вынеся персонажа\n        // в отдельный компонент. Но кода будет больше, появится новое состояние\n        // и не факт, что мы выиграем по оптимизации за счет бОльшего кол-ва элементов\n\n        // По возможности, не злоупотребляйте рефами, только в крайних случаях\n        itemRefs.current.forEach(item => item.classList.remove('char__item_selected'));\n        itemRefs.current[id].classList.add('char__item_selected');\n        itemRefs.current[id].focus();\n    }\n\n\n    // Этот метод создан для оптимизации, \n    // чтобы не помещать такую конструкцию в метод render\n    function renderItems(arr) {\n        const items =  arr.map((item, i) => {\n            let imgStyle = {'objectFit' : 'cover'};\n            if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n                imgStyle = {'objectFit' : 'unset'};\n            }\n            \n            return (\n                <li \n                    className=\"char__item\"\n                    tabIndex={0}\n                    ref={el => itemRefs.current[i] = el}\n                    key={item.id}\n                    onClick={() => {\n                        props.onCharSelected(item.id);\n                        focusOnItem(i); \n                    }}\n                    \n                    onKeyPress={(e) => {\n                        if( e.key === ' ' || e.key === \"Enter\") {\n                            props.onCharSelected(item.id);\n                            focusOnItem(i); \n                        }\n                    }}>\n                        <img src={item.thumbnail} alt={item.name} style={imgStyle}/>\n                        <div className=\"char__name\">{item.name}</div>\n                </li>\n            )\n        });\n        // А эта конструкция вынесена для центровки спиннера/ошибки\n        return (\n            <ul className=\"char__grid\">\n                {items}\n            </ul>\n        )\n    }\n    \n    const items = renderItems(charList);\n\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading && !newItemLoading ? <Spinner/> : null;\n    // const content = !(loading || error) ? items : null;\n\n    return (\n        <div className=\"char__list\">\n            {errorMessage}\n            {spinner}\n            {items}\n            {/* {content} */}\n            <button \n                className=\"button button__main button__long\"\n                disabled={newItemLoading}\n                style={{\"display\" : charEnded ? 'none' : 'block'}}\n                onClick={() => onRequest(offset)}\n                >\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n    \n}\n\nexport default CharList;","export default __webpack_public_path__ + \"static/media/abyss.93d211d3.jpg\";","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spiner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Skeleton from '../skeleton/Skeleton';\n\nimport './charInfo.scss';\n\nconst CharInfo = (props) => {\n\n    const [char, setChar] = useState(null);\n\n    const {loading, error, getCharacter, clearError} = useMarvelService();\n\n    useEffect(() => {\n        updateChar()\n    }, [props.charId])\n\n    const updateChar = () => {\n        const {charId} = props;\n        if (!charId) {\n            return;\n        }\n\n        clearError();\n        getCharacter(charId)\n            .then(onCharLoaded)\n    }\n\n    const onCharLoaded = (char) => {\n        setChar(char);\n    }\n\n    const skeleton = char || loading || error ? null : <Skeleton/>;\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading ? <Spinner/> : null;\n    const content = !(loading || error || !char) ? <View char={char}/> : null;\n\n    return (\n        <div className=\"char__info\">\n            {skeleton}\n            {errorMessage}\n            {spinner}\n            {content}\n        </div>\n    )\n}\n\nconst View = ({char}) => {\n    const {name, description, thumbnail, homepage, wiki, comics} = char;\n\n    let imgStyle = {'objectFit' : 'cover'};\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = {'objectFit' : 'contain'};\n    }\n\n    return (\n        <>\n            <div className=\"char__basics\">\n                <img src={thumbnail} alt={name} style={imgStyle}/>\n                <div>\n                    <div className=\"char__info-name\">{name}</div>\n                    <div className=\"char__btns\">\n                        <a href={homepage} className=\"button button__main\">\n                            <div className=\"inner\">homepage</div>\n                        </a>\n                        <a href={wiki} className=\"button button__secondary\">\n                            <div className=\"inner\">Wiki</div>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"char__descr\">\n                {description}\n            </div>\n            <div className=\"char__comics\">Comics:</div>\n            <ul className=\"char__comics-list\">\n                {comics.length > 0 ? null : 'There is no comics with this character'}\n                {\n                    comics.map((item, i) => {\n                        // eslint-disable-next-line\n                        if (i > 9) return;\n                        return (\n                            <li key={i} className=\"char__comics-item\">\n                                {item.name}\n                            </li>\n                        )\n                    })\n                }                \n            </ul>\n        </>\n    )\n}\n\nCharInfo.propTypes = {\n    charId: PropTypes.number\n}\n\nexport default CharInfo;","   \r\nimport { Component } from \"react\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\n\r\nclass ErrorBoundary extends Component {\r\n    state = {\r\n        error: false\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        console.log(error, errorInfo);\r\n        this.setState({\r\n            error: true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.error) {\r\n            return <ErrorMessage/>\r\n        }\r\n\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import React from 'react';\r\nimport RandomChar from \"../randomChar/RandomChar\";\r\nimport CharList from \"../charList/CharList\";\r\nimport CharInfo from \"../charInfo/CharInfo\";\r\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\r\n\r\nimport { useState } from \"react\";\r\n\r\nimport decoration from '../../resources/img/vision.png';\r\n\r\nconst Mainpages = () => {\r\n\r\n    const [selectedChar, setChar] = useState(null);\r\n\r\n    const onCharSelected = (id) => {\r\n        setChar(id);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ErrorBoundary>\r\n                <RandomChar/>\r\n            </ErrorBoundary>\r\n\r\n            <div className=\"char__content\">\r\n                \r\n                <ErrorBoundary>\r\n                    <CharList onCharSelected={onCharSelected} />\r\n                </ErrorBoundary>\r\n\r\n                <ErrorBoundary>\r\n                    <CharInfo charId={selectedChar} />\r\n                </ErrorBoundary>\r\n            </div>\r\n            <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>    \r\n        </>\r\n    );\r\n}\r\n\r\nexport default Mainpages;\r\n","import React from 'react';\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Pages404() {\r\n  return (\r\n    <div>\r\n        <ErrorMessage/>\r\n        <p style={{'textAlign': 'center', 'fontWeight': 'bold', 'fontSize': '24px'}}>Page doesn't exist</p>\r\n        <Link style={{'display': 'block', 'textAlign': 'center', 'fontWeight': 'bold', 'fontSize': '24px', 'marginTop': '30px'}} to=\"/marvel-started/\">Back to main page</Link>\r\n    </div>\r\n  )\r\n}\r\n","import '../singleComic/singleComic.scss';\r\nimport { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport useMarvelService from '../../services/MarvelService';\r\nimport Spinner from '../spiner/Spinner';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\n\r\nimport {Link, useParams} from 'react-router-dom';\r\n\r\nconst SingleComicPage = () => {\r\n\r\n    const {comicId} = useParams();\r\n    const [comic, setComic] = useState(null);\r\n\r\n    const {loading, error, getComic, clearError} = useMarvelService();\r\n\r\n    useEffect(() => {\r\n        updateComic()\r\n    }, [comicId])\r\n\r\n    const updateComic = () => {\r\n        clearError();\r\n        getComic(comicId)\r\n            .then(onComicLoader)\r\n    }\r\n\r\n    const onComicLoader = (comic) => {\r\n        setComic(comic)\r\n    }\r\n\r\n    const errorMessage = error ? <ErrorMessage/> : null;\r\n    const spinner = loading ? <Spinner/> : null;\r\n    const content = !(loading || error || !comic) ? <View comic={comic}/> : null;\r\n\r\n    return (\r\n        <>\r\n            {errorMessage}\r\n            {spinner}\r\n            {content}\r\n        </>\r\n    )\r\n}\r\n\r\nconst View = ({comic}) => {\r\n\r\n    const {title, description, pageCount, thumbnail, language, price} = comic;\r\n\r\n    return(\r\n        <div className=\"single-comic\">\r\n            <img src={thumbnail} alt={title} className=\"single-comic__img\"/>\r\n            <div className=\"single-comic__info\">\r\n                <h2 className=\"single-comic__name\">{title}</h2>\r\n                <p className=\"single-comic__descr\">{description}</p>\r\n                <p className=\"single-comic__descr\">{pageCount}</p>\r\n                <p className=\"single-comic__descr\">Language: {language}</p>\r\n                <div className=\"single-comic__price\">{price}</div>\r\n            </div>\r\n            <Link to=\"/marvel-started/comics\" className=\"single-comic__back\">Back to all</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SingleComicPage;","import React from 'react';\r\nimport './Test.scss';\r\n\r\nconst Test = (props) => {\r\n    return (\r\n        <div style={{'width' : '100%', 'border' : '1px solid black', 'backgroundColor': props.color}}>\r\n\r\n            {/* Чтобы отобразит какой либо дочерний элемент */}\r\n            {/* {props.children} */}\r\n\r\n            {\r\n                React.Children.map(props.children, child => {\r\n                    return React.cloneElement(child, {className : 'active'})\r\n                })\r\n            }\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nconst Block = (props) => {\r\n    return (\r\n        <>\r\n        \r\n        <div>\r\n            {props.left}\r\n        </div>\r\n\r\n        <div>\r\n            {props.right}\r\n        </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nfunction Test2 () {\r\n    return(\r\n        <>\r\n            <Test color={'red'}>\r\n                left = {\r\n                    <Block color={'red'}>\r\n                        <p>Hello</p>\r\n                    </Block>  \r\n                }\r\n                          \r\n                right = {\r\n                    <Block color={'green'}>\r\n                        <p>Are you drinking vodka?</p>\r\n                    </Block>\r\n                }\r\n\r\n            </Test>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Test2;","import AppHeader from \"../appHeader/AppHeader\";\n\nimport { useState } from \"react\";\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\n\nimport {ComicPages, MainPages, Page404, SingleComicPage} from \"../pages\";\n\nimport Test from \"../test/Test\";\n\nconst  App  = () => {\n\n    const [selectedChar, setChar] = useState(null);\n\n    const onCharSelected = (id) => {\n        setChar(id);\n    }\n\n    return (\n        <Router>\n            <div className=\"app\">\n                {/* <TestComponent /> */}\n                <AppHeader/>\n                <main>\n                    <Switch>\n                        <Route exact path=\"/marvel-started/\">\n                            <MainPages/>\n                        </Route>\n                        \n                        <Route exact path=\"/marvel-started/comics\">\n                            <ComicPages/>\n                        </Route>\n\n                        <Route exact path=\"/comics/:comicId\">\n                            <SingleComicPage/>\n                        </Route>\n\n                        <Route path=\"*\">\n                            <Page404/>\n                        </Route>\n                    </Switch>\n                </main>\n\n                {/* <Test></Test> */}\n            </div>\n        </Router>\n    )\n}\n\nexport default App;","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\n\nimport './style/style.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}