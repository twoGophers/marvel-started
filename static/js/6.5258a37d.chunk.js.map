{"version":3,"sources":["resources/img/UW.png","resources/img/x-men.png","components/comicsList/ComicsList.js","components/pages/ComicPages.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"names":["ComicsList","props","useState","comicsList","setComicsList","newComicsLoading","setNewComicsLoading","offset","setOffset","comicsEnded","setComicsEnded","useMarvelService","loading","error","getAllComics","useEffect","onRequestComics","initial","then","onComicsListLoaded","newComicsList","ended","length","items","arr","map","item","i","className","to","id","src","thumbnail","alt","title","price","renderComics","errorMessage","ErrorMessage","spinner","Spinner","disabled","style","onClick","Comicpages","AppBanner","_toConsumableArray","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError"],"mappings":"mMAAe,ICAA,I,qCCwFAA,EA7EI,SAACC,GAEhB,MAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgDF,oBAAS,GAAzD,mBAAOG,EAAP,KAAyBC,EAAzB,KACA,EAA4BJ,mBAAS,KAArC,mBAAOK,EAAP,KAAeC,EAAf,KACA,EAAsCN,oBAAS,GAA/C,mBAAOO,EAAP,KAAoBC,EAApB,KAEA,EAAuCC,cAAhCC,EAAP,EAAOA,QAASC,EAAhB,EAAgBA,MAAOC,EAAvB,EAAuBA,aAEvBC,qBAAU,WACNC,EAAgBT,GAAQ,KACzB,IAEH,IAAMS,EAAkB,SAACT,EAAQU,GACnBX,GAAVW,GACAH,EAAaP,GACRW,KAAKC,IAORA,EAAqB,SAACC,GACxB,IAAIC,GAAQ,EACTD,EAAcE,OAAS,IACtBD,GAAQ,GAGZjB,GAAc,SAAAD,GAAU,4BAAQA,GAAR,YAAuBiB,OAC/Cd,GAAoB,SAAAD,GAAgB,OAAI,KACxCG,GAAU,SAAAD,GAAM,OAAIA,EAAS,KAC7BG,GAAe,SAAAD,GAAW,OAAIY,MAwBlC,IAAME,EApBN,SAAsBC,GAClB,IAAMD,EAAQC,EAAIC,KAAI,SAACC,EAAMC,GACzB,OACI,oBAAIC,UAAU,eAAd,SACI,eAAC,IAAD,CAAMC,GAAE,kBAAaH,EAAKI,IAA1B,UACI,qBAAKC,IAAKL,EAAKM,UAAWC,IAAKP,EAAKQ,MAAON,UAAU,qBACrD,qBAAKA,UAAU,oBAAf,SAAoCF,EAAKQ,QACzC,qBAAKN,UAAU,qBAAf,SAAqCF,EAAKS,YAJhBR,MAU1C,OACI,oBAAIC,UAAU,eAAd,SACKL,IAKCa,CAAajC,GAErBkC,EAAexB,EAAQ,cAACyB,EAAA,EAAD,IAAkB,KACzCC,EAAU3B,IAAYP,EAAmB,cAACmC,EAAA,EAAD,IAAa,KAE5D,OACI,sBAAKZ,UAAU,eAAf,UACKS,EACAE,EACAhB,EACD,wBACIkB,SAAUpC,EACVqC,MAAO,CAAC,QAAYjC,EAAc,OAAS,SAC3CmB,UAAU,mCACVe,QAAS,kBAAM3B,EAAgBT,IAJnC,SAKI,qBAAKqB,UAAU,QAAf,6BCrEDgB,UATI,WACf,OACI,qCACI,cAACC,EAAA,EAAD,IACA,cAAC,EAAD,S,0FCJG,SAASC,EAAmBtB,GACzC,OCJa,SAA4BA,GACzC,GAAIuB,MAAMC,QAAQxB,GAAM,OAAO,OAAAyB,EAAA,GAAiBzB,GDGzC,CAAkBA,IELZ,SAA0B0B,GACvC,GAAsB,qBAAXC,QAA0BA,OAAOC,YAAYC,OAAOH,GAAO,OAAOH,MAAMO,KAAKJ,GFIvD,CAAgB1B,IAAQ,OAAA+B,EAAA,GAA2B/B,IGLvE,WACb,MAAM,IAAIgC,UAAU,wIHIwE","file":"static/js/6.5258a37d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/UW.422636b4.png\";","export default __webpack_public_path__ + \"static/media/x-men.41b39e19.png\";","import './comicsList.scss';\nimport uw from '../../resources/img/UW.png';\nimport xMen from '../../resources/img/x-men.png';\nimport { Link } from 'react-router-dom';\n\nimport { useState, useEffect, useRef } from 'react';\n\nimport Spinner from '../spiner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport useMarvelService from '../../services/MarvelService';\n\nconst ComicsList = (props) => {\n\n    const [comicsList, setComicsList] = useState([]);\n    const [newComicsLoading, setNewComicsLoading] = useState(false);\n    const [offset, setOffset] = useState(210);\n    const [comicsEnded, setComicsEnded] = useState(false);\n\n    const {loading, error, getAllComics} = useMarvelService();\n\n    useEffect(() => {\n        onRequestComics(offset, true);\n    }, []);\n\n    const onRequestComics = (offset, initial) => {\n        initial ? setNewComicsLoading(false) : setNewComicsLoading(true);\n        getAllComics(offset)\n            .then(onComicsListLoaded)\n    }\n\n    const onComicsListLoading = () => {\n        setNewComicsLoading(true);\n    }\n\n    const onComicsListLoaded = (newComicsList) => {\n        let ended = false;\n        if(newComicsList.length < 8) {\n            ended = true;\n        }\n\n        setComicsList(comicsList => [...comicsList, ...newComicsList]);\n        setNewComicsLoading(newComicsLoading => false);\n        setOffset(offset => offset + 8);\n        setComicsEnded(comicsEnded => ended);\n    }\n\n\n    function renderComics(arr) {\n        const items = arr.map((item, i) => {\n            return (\n                <li className=\"comics__item\" key={i}>\n                    <Link to={`/comics/${item.id}`}>\n                        <img src={item.thumbnail} alt={item.title} className=\"comics__item-img\"/>\n                        <div className=\"comics__item-name\">{item.title}</div>\n                        <div className=\"comics__item-price\">{item.price}</div>\n                    </Link>\n                </li>\n            )\n        })\n\n        return (\n            <ul className=\"comics__grid\">\n                {items}\n            </ul>\n        )\n    }\n\n    const items = renderComics(comicsList);\n\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading && !newComicsLoading ? <Spinner/> : null;\n\n    return (\n        <div className=\"comics__list\">\n            {errorMessage}\n            {spinner}\n            {items}\n            <button \n                disabled={newComicsLoading} \n                style={{'display' : comicsEnded ? 'none' : 'block'}}\n                className=\"button button__main button__long\"\n                onClick={() => onRequestComics(offset)}>\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\nexport default ComicsList;","import React from 'react';\r\nimport AppBanner from \"../appBanner/AppBanner\";\r\nimport ComicsList from \"../comicsList/ComicsList\";\r\n\r\nconst Comicpages = () => {\r\n    return (\r\n        <>\r\n            <AppBanner/>\r\n            <ComicsList/>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Comicpages;\r\n","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"sourceRoot":""}